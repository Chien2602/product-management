block main
    link(rel="stylesheet", href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.0.1/css/bootstrap.min.css")
    link(rel="stylesheet", href="/css/client/pay.css")
    link(rel="stylesheet", href="https://site-assets.fontawesome.com/releases/v6.7.1/css/all.css")
    script(src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js")
    .container
        h3.text-center(style="margin-bottom: 50px") THANH TOÁN ĐƠN HÀNG
        //- Header
        .d-flex.justify-content-between.align-items-center.mb-3
            i.fa-solid.fa-arrow-left(style="padding:0")
            a(href="/home" class="text-decoration-none text-muted" style="margin-right:1165px") Back to shop
        .row
            //- Payment Section
            .col-md-6
                h4.payment-title Thông tin thẻ
                form
                    .mb-3
                        label(for="cardholderName" class="form-label") Họ tên chủ thẻ:
                        input#cardholderName.form-control(type="text" placeholder="NGUYEN VAN A")
                    .mb-3
                        label(for="cardNumber" class="form-label") Số thẻ:
                        input#cardNumber.form-control(type="text" placeholder="01234 56789 1379 2468")
                    .row
                        .col-md-6
                            label(for="expiryDate" class="form-label") Hạn thẻ:
                            input#expiryDate.form-control(type="text" placeholder="YY/MM")
                        .col-md-6
                            label(for="bankSelect" class="form-label") Chọn ngân hàng:
                            select#bankSelect.form-select
                                option(value="") -- Chọn ngân hàng --
                    .form-check.mt-3
                        input#saveCard.form-check-input(type="checkbox")
                        label(for="saveCard" class="form-check-label") Lưu thông tin thẻ vào ví
            //- Order Summary
            .col-md-6
                h4.payment-title Danh sách đơn hàng
                .order-summary.mb-3
                    //- Nội dung sẽ được render động
                hr
                .d-flex.justify-content-between.mb-2
                    p.mb-0 Tổng giá trị đơn hàng
                    p#totalPrice.mb-0 $0.00
                .d-flex.justify-content-between.mb-2
                    p.mb-0 Phí vận chuyển
                    p.mb-0 Free
                .d-flex.justify-content-between.mb-3
                    strong Tổng tiền phải thanh toán
                    strong#grandTotal $0.00
                button.btn-place-order.w-100(type="button") Thanh toán
                p.text-center.mt-3.text-muted Complimentary Shipping & Returns
            #successModal.modal.fade(tabindex="-1", aria-labelledby="successModalLabel", aria-hidden="true")
                .modal-dialog.modal-dialog-centered
                    .modal-content
                        .modal-header
                            h5#successModalLabel.modal-title.text-success Thanh toán thành công
                            button.btn-close(type="button", data-bs-dismiss="modal", aria-label="Close")
                        .modal-body
                            p.mb-2 Cảm ơn bạn đã mua sắm tại cửa hàng của chúng tôi!
                            p.mb-2 Chúng tôi sẽ liên hệ với bạn để xác nhận đơn hàng sớm nhất.
                            ul
                                li Giao hàng miễn phí trong 3-5 ngày làm việc.
                                li Hỗ trợ đổi trả trong 7 ngày nếu có vấn đề phát sinh.
                        .modal-footer.justify-content-center
                            button.btn.btn-success(type="button", data-bs-dismiss="modal") Đóng

    script(src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js")
    script.
        // Hàm lấy giỏ hàng từ cookie
        const getProductFromCookie = (cookieName) => {
            const cookies = document.cookie.split(';');
            let cartData = [];
            
            for(let cookie of cookies) {
                const [name, value] = cookie.trim().split('=');
                if(name === cookieName) {
                    try {
                        cartData = JSON.parse(decodeURIComponent(value));
                        break;
                    } catch(error) {
                        console.error('Error parsing cart cookie:', error);
                    }
                }
            }
            
            console.log('Cart data from cookie:', cartData);
            return cartData;  // Return an array
        };

        // Hàm lấy giỏ hàng từ localStorage
        const getCartFromLocalStorage = () => {
            const cart = localStorage.getItem("selectedItems");
            return cart ? JSON.parse(cart) : [];
        };

        const renderCart = (cart) => {
            const orderSummary = document.querySelector('.order-summary');
            const totalPriceElem = document.getElementById('totalPrice');
            const grandTotalElem = document.getElementById('grandTotal');

            console.log("Cart Data Received:", cart);
            if (!orderSummary) {
                console.error("Element '.order-summary' không tồn tại!");
                return;
            }

            if (!cart || cart.length === 0) {
                console.log("Giỏ hàng trống!");
                orderSummary.innerHTML = '<p>Giỏ hàng của bạn đang trống!</p>';
                totalPriceElem.textContent = '$0.00';
                grandTotalElem.textContent = '$0.00';
                return;
            }

            let totalPrice = 0;
            orderSummary.innerHTML = '';

            cart.forEach(item => {
                if (!item.tenSanPham || !item.gia || !item.hinhAnh) {
                    console.error("Sản phẩm thiếu thông tin:", item);
                    return;
                }

                const itemTotal = item.gia * item.soLuong;
                totalPrice += itemTotal;

                const productHTML = `
                    <div class="d-flex justify-content-between align-items-center mb-2">
                        <img src="${item.hinhAnh}" alt="${item.tenSanPham}" style="width: 50px; height: 50px; object-fit: cover;">
                        <div>
                            <p class="mb-0">${item.tenSanPham}</p>
                            <small>Số lượng: ${item.soLuong}</small>
                        </div>
                        <p class="mb-0">${itemTotal} VNĐ</p>
                    </div>`;
                orderSummary.innerHTML += productHTML;
            });

            totalPriceElem.textContent = `${totalPrice} VNĐ`;
            grandTotalElem.textContent = `${totalPrice} VNĐ`;
        };

        // Fetch danh sách ngân hàng từ API
        document.addEventListener('DOMContentLoaded', async () => {
            const bankSelect = document.getElementById('bankSelect');
            try {
                const response = await axios.get('https://api.vietqr.io/v2/banks');
                const banks = response.data.data;

                banks.forEach(bank => {
                    const option = document.createElement('option');
                    option.value = bank.code;
                    option.textContent = bank.shortName;
                    bankSelect.appendChild(option);
                });
            } catch (error) {
                console.error('Error fetching banks:', error);
                alert("Không thể tải danh sách ngân hàng. Vui lòng thử lại!");
            }

            let cart;
            const source = sessionStorage.getItem("source") || "cart";  // Default to "cart" if no source found
            if (source === "cart") {
                cart = getProductFromCookie('selectedItems');  // Get selectedItems from cookie
            } else if (source === "productInfor") {  // Fix the typo here
                cart = [getProductFromCookie('cart')];
            }
            renderCart(cart);
        });


        // Xử lý khi nhấn nút thanh toán
        // Hàm lấy giá trị của cookie theo tên
        const getCookie = (name) => {
            const cookies = document.cookie.split(';');
            for (let cookie of cookies) {
                const [key, value] = cookie.trim().split('=');
                if (key === name) {
                    return decodeURIComponent(value);
                }
            }
            return null; // Trả về null nếu cookie không tồn tại
        };

        document.querySelector('.btn-place-order').addEventListener('click', async () => {
            const selectedBank = document.getElementById('bankSelect').value;
            let cart;
            const source = sessionStorage.getItem("source") || "cart";  // Default to "cart" if no source found
            if (source === "cart") {
                cart = getProductFromCookie('selectedItems');  // Get selectedItems from cookie
            } else if (source === "productInfor") {  // Fix the typo here
                cart = [getProductFromCookie('cart')];
            }
            // Kiểm tra xem ngân hàng có được chọn hay không
            if (selectedBank) {
                // Lấy userId từ cookie 'login'
                const userId = getCookie('login');  // Giả sử cookie 'login' lưu userId

                if (!userId) {
                    alert('Bạn phải đăng nhập để thực hiện thanh toán.');
                    return;
                }
                if (cart && cart.length > 0) {
                    // Lấy thời gian hiện tại
                    const currentTime = new Date().toISOString();

                    try {
                        for (let item of cart) {
                            await axios.post('/addHistory', {
                                idUser: userId,  // Sử dụng userId từ cookie
                                maSanPham: item.maSanPham,
                                tenSanPham: item.tenSanPham,
                                gia: item.gia,
                                hinhAnh: item.hinhAnh,
                                soLuong: item.soLuong,
                                thoiGian: currentTime
                            });
                        }

                        // Hiển thị modal thành công
                        const successModal = new bootstrap.Modal(document.getElementById('successModal'));
                        successModal.show();
                    } catch (error) {
                        console.error('Lỗi khi lưu dữ liệu vào history:', error);
                        alert('Có lỗi xảy ra khi lưu dữ liệu, vui lòng thử lại.');
                    }
                } else {
                    alert('Giỏ hàng trống!');
                }
            } else {
                alert('Vui lòng chọn ngân hàng.');
            }
        });


    
    style.
        /* Modal */
      .modal-title {
          font-weight: bold;
          color: #333;
      }
      .modal-body p {
          margin-bottom: 10px;
          font-size: 14px;
          color: #555;
      }
      .modal-footer button {
          background-color: #28a745;
          color: #fff;
          border: none;
          transition: background-color 0.3s ease;
      }
      .modal-footer button:hover {
          background-color: #218838;
      }
